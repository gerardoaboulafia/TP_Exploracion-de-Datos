### Trabajo Práctico N°1 - Exploración de Datos
### Dataset: Pacientes
### Integrantes:
###   - Aboulafia Gerardo
###   - Barquet Amelie
###   - David Santiago
###   - Fernandez Ignacio
###   - Vasquez Agustina
# Carga del dataset
data <- read.csv("/Users/gerardoaboulafia/Documents/Exploración_de_datos/Datasets/Datos trabajo 1.csv", sep=";", dec = ",")
# -------------Limpieza de datos y transformación de variables------------------
#Eliminamos el punto que separa los miles
data$Calorías <- gsub("\\.", "", data$Calorías)
#Verificamos qué tipo de dato tiene cada columna del dataset
str(data)
#Transformamos la columna Calorías a numérica
data$Calorías <- as.numeric(data$Calorías)
# Reemplazamos el valor 999,99 por NA (como indica la consigna)
data <- replace(data, data == 999.99, NA)
# -------- Análisis exploratorio de datos y visualización --------
#Definimos la paleta de colores para los plots
colores <- c("CATE 1" = "#065893", "CATE 2" = "#179CBC", "CATE 3" = "#47C0A7")
# Medidas de posición Grasas_sat
media_grasa <- mean(data$Grasas_sat, na.rm = TRUE)  # na.rm = TRUE para omitir NA
mediana_grasa <- median(data$Grasas_sat, na.rm = TRUE)
media_grasa
mediana_grasa
# Calcular la desviación estándar Grasas_sat
desviacion_estandar_grasa <- sd(data$Grasas_sat, na.rm = TRUE)
desviacion_estandar_grasa
# Crear un histograma Grasas_sat
hist(data$Grasas_sat, main = "Histograma de Datos de Grasas Saturadas",
xlab = "Valores", ylab = "Frecuencia", col = "#065893",
ylim = c(0, max(hist(data$Grasas_sat)$counts) * 1.2))
# Crear un boxplot Grasas_sat
boxplot(data$Grasas_sat, main = "Boxplot de Grasas Saturadas", ylab = "Valores", col="#065893")
# Medidas de posición alcohol
media_alcohol <- mean(data$Alcohol, na.rm = TRUE)  # na.rm = TRUE para omitir NA
mediana_alcohol <- median(data$Alcohol, na.rm = TRUE)
media_alcohol
mediana_alcohol
# Calcular la desviación estándar alcohol
desviacion_estandar_alcohol <- sd(data$Alcohol, na.rm = TRUE)
desviacion_estandar_alcohol
# Crear un histograma para la variable alcohol
hist(data$Alcohol, main = "Histograma de Datos Alcohol", xlab = "Valores",
ylab = "Frecuencia", col="#065893",
ylim = c(0, max(hist(data$Alcohol)$counts) * 1.2))
# Crear un boxplot alcohol
boxplot(data$Alcohol, main = "Boxplot de Alcohol", ylab = "Valores", col="#065893")
# Calculamos las medidas de posición calorias
media_calorías <- mean(data$Calorías, na.rm = TRUE)  # na.rm = TRUE para omitir NA
mediana_calorías <- median(data$Calorías, na.rm = TRUE)
media_calorías
mediana_calorías
# Calcular la desviación estándar calorias
desviacion_estandar_calorias <- sd(data$Calorías, na.rm = TRUE)
desviacion_estandar_calorias
# Crear un histograma calorias
hist(data$Calorías, main = "Histograma de Datos Calorias", xlab = "Valores",
ylab = "Frecuencia", col="#065893",
ylim = c(0, max(hist(data$Calorías)$counts) * 1.2),
xlim = c(min(data$Calorías), 2500))
# Crear un boxplot calorias
boxplot(data$Calorías, main = "Boxplot de Calorias", ylab = "Valores", col="#065893")
# -------- Analizamos si el sexo del paciente influye en el comportamiento de las variables --------
# Boxplot para Grasas sat por Sexo
boxplot(Grasas_sat ~ Sexo, data = data,
xlab = "Sexo", ylab = "Grasas sat",
main = "Distribución de Grasas sat por Sexo",
col = colores)
# Boxplot para Alcohol por Sexo
boxplot(Alcohol ~ Sexo, data = data,
xlab = "Sexo", ylab = "Alcohol",
main = "Distribución de Alcohol por Sexo",
col = colores)
# Boxplot para Calorías por Sexo
boxplot(Calorías ~ Sexo, data = data,
xlab = "Sexo", ylab = "Calorías",
main = "Distribución de Calorías por Sexo",
col = colores)
# -------- Analizamos el comportamiento de los datos para la variable Alcohol de acuerdo con la cantidad de Calorías consumidas --------
# Recategorizamos la variable Calorías en 3 categorías (CATE 1, CATE 2, CATE 3) de acuerdo con los valores de la variable
data$Categoria_Calorías <- cut(data$Calorías, breaks=c(0, 1100, 1700, Inf), labels=c("CATE 1", "CATE 2", "CATE 3"))
# Visualizamos la distribución de la variable Calorías por los grupos creados
boxplot(Alcohol ~ Categoria_Calorías, data = data,
xlab = "Categoría de Calorías", ylab = "Alcohol",
main = "Distribución de Alcohol por Categoría de Calorías",
col=colores)
# Análisis de correlación entre alcohol y calorías con scatterplot. Cada observación está coloreada según la categoría de calorías. Quiero que el punto esté relleno
#Paleta para el plot
colores_2 <- c("CATE 1" = "#EF684F", "CATE 2" = "#041121", "CATE 3" = "#47C0A7")
plot(data$Grasas_sat, data$Alcohol,
col = colores_2[data$Categoria_Calorías],
xlab = "Grasas saturadas",
ylab = "Alcohol",
main = "Correlación entre Alcohol y Grasas tomando en cuenta las Calorías",
pch = 19
)
legend("topright",
legend = levels(data$Categoria_Calorías),
col = colores_2,
pch = 19
)
#-------------Análisis del dataset de los cantones suizos-----------------#
# Carga del dataset y librerías
data(swiss)
library(pheatmap)
#-------------Instanciamos las variables y sus intervalos para utilizarlos más adelante-----------------#
#FERTILIDAD
fertilidad <- c(swiss[1])
fertilidad <- as.numeric(unlist(fertilidad))
niveles_de_fertilidad = cut(fertilidad,breaks=seq(35.0,92.5,length=nclass.Sturges(fertilidad)),include.lowest=TRUE)
#EDUCACION
educacion <- c(swiss[4])
educacion <- as.numeric(unlist(educacion))
intervalosEducacion <- cut(educacion,breaks=seq(
range(educacion)[1],range(educacion)[2],length=nclass.Sturges(educacion)),include.lowest=TRUE)
#MORT.INFANTIL
mort_inf <- c(swiss[6])
mort_inf <- as.numeric(unlist(mort_inf))
intervalosMortInf <- cut(mort_inf,breaks=seq(
range(mort_inf)[1],range(mort_inf)[2],length=nclass.Sturges(mort_inf)),include.lowest=TRUE)
#CATOLICOS
catolicos <- c(swiss[5])
catolicos <- as.numeric(unlist(catolicos))
intervalosCatolicos <- cut(catolicos,breaks=seq(
range(catolicos)[1],range(catolicos)[2],length=nclass.Sturges(catolicos)),include.lowest=TRUE)
#AGRICULTURA
agricultura <- c(swiss[2])
agricultura <- as.numeric(unlist(agricultura))
porcentaje_trabajo_agricola <- cut(agricultura,breaks=seq(1.2,89.7,length=nclass.Sturges(
agricultura)),include.lowest=TRUE)
#ALTA CALIFICACION
alta_calificacion <- c(swiss[3])
alta_calificacion <- as.numeric(unlist(alta_calificacion))
intervalosAltaCalificacion <- cut(alta_calificacion,breaks=seq(
range(alta_calificacion)[1],range(alta_calificacion)[2],length=nclass.Sturges(alta_calificacion)),include.lowest=TRUE)
intervalosAltaCalificacion
#LABELS para las tablas de contingencia
agricultura_titulos <- c('1.2%-16%','16%-31%','31%-46%','46%-60%','60%-75%','75%-90%')
fertilidad_titulos <- c('Muy Pobre','Pobre','Medio','Bueno','Muy Bueno','Excelente')
catolicos_titulos <- c('Muy Bajo','Bajo','Medio','Alto','Muy Alto','Máximo')
educacion_titulos <- c('Muy Bajo','Bajo','Medio','Alto','Muy Alto','Máximo')
mort_inf_titulos <- c('[10.8,13.4]','(13.4,16.1]','(16.1,18.7]','(18.7,21.3]','(21.3,24]','(24,26.6]')
alta_calificacion_titulos <- c('[3,8.67]' ,'(8.67,14.3]', '(14.3,20]' ,'(20,25.7]', '(25.7,31.3]', '(31.3,37]')
#TABLAS DE CONTINGENCIA
#FERTILIDAD/AGRICULTURA
tabla_fert_agr = table(niveles_de_fertilidad,porcentaje_trabajo_agricola)
rownames(tabla_fert_agr) <- fertilidad_titulos  ##definimos titulos para columnas y filas
colnames(tabla_fert_agr) <- agricultura_titulos
round(prop.table(tabla_fert_agr),2) ## creamos tabla de frecuencias (dos decimales)
round(chisq.test(tabla_fert_agr)$expected,2)  ##creamos tabla de valores esperados
tabla_fert_agr
chisq.test(tabla_fert_agr)  #opcion =>,simulate.p.values=TRUE  ((devuelve un warning message))
#EDUCACION/CALIFICACION
tabla_educ_calif = table(intervalosAltaCalificacion,intervalosEducacion)
tabla_educ_calif
chisq.test(tabla_educ_calif, simulate.p.value = TRUE)
#INFANT MORTALITY/AGRICULTURA
tabla_inf_agr = table(intervalosMortInf,porcentaje_trabajo_agricola)
tabla_inf_agr
# podemos generar 15 tablas bivariadas distintas (combinatorio(6,2)).
#-----------------Análisis de correlación entre variables-----------------#
# Creamos un heatmap para visualizar la correlación entre las variables
m <- cor(swiss)
pheatmap(m,display_numbers = TRUE,cluster_cols = FALSE,
cluster_rows = FALSE)      #nos devuelve el mapa de calor con
#-----------------Calcular la distancia de Mahalanobis-----------------#
#Calcular la distancia de Mahalanobis para cada registro
mahalanobis(swiss, colMeans(swiss), cov(swiss))
#crear nueva columna para almacenar el valor de la distancia de Mahalanobis
swiss$distanciaMahalanobis <- mahalanobis(swiss, colMeans(swiss), cov(swiss))
#crear nueva columna para almacenar el p-value de la distancia de Mahalanobis
swiss$pvalue <- pchisq(swiss$distanciaMahalanobis, df = 5, lower.tail = FALSE)
# filtramos los registros con p-value menores a 0.001.
swiss[swiss$pvalue < 0.001, ]
### Trabajo Práctico N°1 - Exploración de Datos
### Dataset: Pacientes
### Integrantes:
###   - Aboulafia Gerardo
###   - Barquet Amelie
###   - David Santiago
###   - Fernandez Ignacio
###   - Vasquez Agustina
# Carga del dataset
data <- read.csv("/Users/gerardoaboulafia/Documents/Exploración_de_datos/Datasets/Datos trabajo 1.csv", sep=";", dec = ",")
# -------------Limpieza de datos y transformación de variables------------------
#Eliminamos el punto que separa los miles
data$Calorías <- gsub("\\.", "", data$Calorías)
#Verificamos qué tipo de dato tiene cada columna del dataset
str(data)
#Transformamos la columna Calorías a numérica
data$Calorías <- as.numeric(data$Calorías)
# Reemplazamos el valor 999,99 por NA (como indica la consigna)
data <- replace(data, data == 999.99, NA)
# -------- Análisis exploratorio de datos y visualización --------
#Definimos la paleta de colores para los plots
colores <- c("CATE 1" = "#065893", "CATE 2" = "#179CBC", "CATE 3" = "#47C0A7")
# Medidas de posición Grasas_sat
media_grasa <- mean(data$Grasas_sat, na.rm = TRUE)  # na.rm = TRUE para omitir NA
mediana_grasa <- median(data$Grasas_sat, na.rm = TRUE)
media_grasa
mediana_grasa
# Calcular la desviación estándar Grasas_sat
desviacion_estandar_grasa <- sd(data$Grasas_sat, na.rm = TRUE)
desviacion_estandar_grasa
# Crear un histograma Grasas_sat
hist(data$Grasas_sat, main = "Histograma de Datos de Grasas Saturadas",
xlab = "Valores", ylab = "Frecuencia", col = "#065893",
ylim = c(0, max(hist(data$Grasas_sat)$counts) * 1.2))
# Crear un boxplot Grasas_sat
boxplot(data$Grasas_sat, main = "Boxplot de Grasas Saturadas", ylab = "Valores", col="#065893")
# Medidas de posición alcohol
media_alcohol <- mean(data$Alcohol, na.rm = TRUE)  # na.rm = TRUE para omitir NA
mediana_alcohol <- median(data$Alcohol, na.rm = TRUE)
media_alcohol
mediana_alcohol
# Calcular la desviación estándar alcohol
desviacion_estandar_alcohol <- sd(data$Alcohol, na.rm = TRUE)
desviacion_estandar_alcohol
# Crear un histograma para la variable alcohol
hist(data$Alcohol, main = "Histograma de Datos Alcohol", xlab = "Valores",
ylab = "Frecuencia", col="#065893",
ylim = c(0, max(hist(data$Alcohol)$counts) * 1.2))
# Crear un boxplot alcohol
boxplot(data$Alcohol, main = "Boxplot de Alcohol", ylab = "Valores", col="#065893")
# Calculamos las medidas de posición calorias
media_calorías <- mean(data$Calorías, na.rm = TRUE)  # na.rm = TRUE para omitir NA
mediana_calorías <- median(data$Calorías, na.rm = TRUE)
media_calorías
mediana_calorías
# Calcular la desviación estándar calorias
desviacion_estandar_calorias <- sd(data$Calorías, na.rm = TRUE)
desviacion_estandar_calorias
# Crear un histograma calorias
hist(data$Calorías, main = "Histograma de Datos Calorias", xlab = "Valores",
ylab = "Frecuencia", col="#065893",
ylim = c(0, max(hist(data$Calorías)$counts) * 1.2),
xlim = c(min(data$Calorías), 2500))
# Crear un boxplot calorias
boxplot(data$Calorías, main = "Boxplot de Calorias", ylab = "Valores", col="#065893")
# -------- Analizamos si el sexo del paciente influye en el comportamiento de las variables --------
# Boxplot para Grasas sat por Sexo
boxplot(Grasas_sat ~ Sexo, data = data,
xlab = "Sexo", ylab = "Grasas sat",
main = "Distribución de Grasas sat por Sexo",
col = colores)
# Boxplot para Alcohol por Sexo
boxplot(Alcohol ~ Sexo, data = data,
xlab = "Sexo", ylab = "Alcohol",
main = "Distribución de Alcohol por Sexo",
col = colores)
# Boxplot para Calorías por Sexo
boxplot(Calorías ~ Sexo, data = data,
xlab = "Sexo", ylab = "Calorías",
main = "Distribución de Calorías por Sexo",
col = colores)
# -------- Analizamos el comportamiento de los datos para la variable Alcohol de acuerdo con la cantidad de Calorías consumidas --------
# Recategorizamos la variable Calorías en 3 categorías (CATE 1, CATE 2, CATE 3) de acuerdo con los valores de la variable
data$Categoria_Calorías <- cut(data$Calorías, breaks=c(0, 1100, 1700, Inf), labels=c("CATE 1", "CATE 2", "CATE 3"))
# Visualizamos la distribución de la variable Calorías por los grupos creados
boxplot(Alcohol ~ Categoria_Calorías, data = data,
xlab = "Categoría de Calorías", ylab = "Alcohol",
main = "Distribución de Alcohol por Categoría de Calorías",
col=colores)
# Análisis de correlación entre alcohol y calorías con scatterplot. Cada observación está coloreada según la categoría de calorías. Quiero que el punto esté relleno
#Paleta para el plot
colores_2 <- c("CATE 1" = "#EF684F", "CATE 2" = "#041121", "CATE 3" = "#47C0A7")
plot(data$Grasas_sat, data$Alcohol,
col = colores_2[data$Categoria_Calorías],
xlab = "Grasas saturadas",
ylab = "Alcohol",
main = "Correlación entre Alcohol y Grasas tomando en cuenta las Calorías",
pch = 19
)
legend("topright",
legend = levels(data$Categoria_Calorías),
col = colores_2,
pch = 19
)
#-------------Análisis del dataset de los cantones suizos-----------------#
# Carga del dataset y librerías
data(swiss)
library(pheatmap)
#-------------Instanciamos las variables y sus intervalos para utilizarlos más adelante-----------------#
#FERTILIDAD
fertilidad <- c(swiss[1])
fertilidad <- as.numeric(unlist(fertilidad))
niveles_de_fertilidad = cut(fertilidad,breaks=seq(35.0,92.5,length=nclass.Sturges(fertilidad)),include.lowest=TRUE)
#EDUCACION
educacion <- c(swiss[4])
educacion <- as.numeric(unlist(educacion))
intervalosEducacion <- cut(educacion,breaks=seq(
range(educacion)[1],range(educacion)[2],length=nclass.Sturges(educacion)),include.lowest=TRUE)
#MORT.INFANTIL
mort_inf <- c(swiss[6])
mort_inf <- as.numeric(unlist(mort_inf))
intervalosMortInf <- cut(mort_inf,breaks=seq(
range(mort_inf)[1],range(mort_inf)[2],length=nclass.Sturges(mort_inf)),include.lowest=TRUE)
#CATOLICOS
catolicos <- c(swiss[5])
catolicos <- as.numeric(unlist(catolicos))
intervalosCatolicos <- cut(catolicos,breaks=seq(
range(catolicos)[1],range(catolicos)[2],length=nclass.Sturges(catolicos)),include.lowest=TRUE)
#AGRICULTURA
agricultura <- c(swiss[2])
agricultura <- as.numeric(unlist(agricultura))
porcentaje_trabajo_agricola <- cut(agricultura,breaks=seq(1.2,89.7,length=nclass.Sturges(
agricultura)),include.lowest=TRUE)
#ALTA CALIFICACION
alta_calificacion <- c(swiss[3])
alta_calificacion <- as.numeric(unlist(alta_calificacion))
intervalosAltaCalificacion <- cut(alta_calificacion,breaks=seq(
range(alta_calificacion)[1],range(alta_calificacion)[2],length=nclass.Sturges(alta_calificacion)),include.lowest=TRUE)
intervalosAltaCalificacion
#LABELS para las tablas de contingencia
agricultura_titulos <- c('1.2%-16%','16%-31%','31%-46%','46%-60%','60%-75%','75%-90%')
fertilidad_titulos <- c('Muy Pobre','Pobre','Medio','Bueno','Muy Bueno','Excelente')
catolicos_titulos <- c('Muy Bajo','Bajo','Medio','Alto','Muy Alto','Máximo')
educacion_titulos <- c('Muy Bajo','Bajo','Medio','Alto','Muy Alto','Máximo')
mort_inf_titulos <- c('[10.8,13.4]','(13.4,16.1]','(16.1,18.7]','(18.7,21.3]','(21.3,24]','(24,26.6]')
alta_calificacion_titulos <- c('[3,8.67]' ,'(8.67,14.3]', '(14.3,20]' ,'(20,25.7]', '(25.7,31.3]', '(31.3,37]')
#TABLAS DE CONTINGENCIA
#FERTILIDAD/AGRICULTURA
tabla_fert_agr = table(niveles_de_fertilidad,porcentaje_trabajo_agricola)
rownames(tabla_fert_agr) <- fertilidad_titulos  ##definimos titulos para columnas y filas
colnames(tabla_fert_agr) <- agricultura_titulos
round(prop.table(tabla_fert_agr),2) ## creamos tabla de frecuencias (dos decimales)
round(chisq.test(tabla_fert_agr)$expected,2)  ##creamos tabla de valores esperados
tabla_fert_agr
chisq.test(tabla_fert_agr)  #opcion =>,simulate.p.values=TRUE  ((devuelve un warning message))
#EDUCACION/CALIFICACION
tabla_educ_calif = table(intervalosAltaCalificacion,intervalosEducacion)
tabla_educ_calif
chisq.test(tabla_educ_calif, simulate.p.value = TRUE)
#INFANT MORTALITY/AGRICULTURA
tabla_inf_agr = table(intervalosMortInf,porcentaje_trabajo_agricola)
tabla_inf_agr
# podemos generar 15 tablas bivariadas distintas (combinatorio(6,2)).
#-----------------Análisis de correlación entre variables-----------------#
# Creamos un heatmap para visualizar la correlación entre las variables
m <- cor(swiss)
pheatmap(m,display_numbers = TRUE,cluster_cols = FALSE,
cluster_rows = FALSE)      #nos devuelve el mapa de calor con
#-----------------Calcular la distancia de Mahalanobis-----------------#
#Calcular la distancia de Mahalanobis para cada registro
mahalanobis(swiss, colMeans(swiss), cov(swiss))
#crear nueva columna para almacenar el valor de la distancia de Mahalanobis
swiss$distanciaMahalanobis <- mahalanobis(swiss, colMeans(swiss), cov(swiss))
#crear nueva columna para almacenar el p-value de la distancia de Mahalanobis
swiss$pvalue <- pchisq(swiss$distanciaMahalanobis, df = 5, lower.tail = FALSE)
# filtramos los registros con p-value menores a 0.001.
swiss[swiss$pvalue < 0.001, ]
# Crear un histograma Grasas_sat
hist(data$Grasas_sat, main = "Histograma de Datos de Grasas Saturadas",
xlab = "Valores", ylab = "Frecuencia", col = "#065893",
ylim = c(0, max(hist(data$Grasas_sat)$counts) * 1.2))
View(data)
